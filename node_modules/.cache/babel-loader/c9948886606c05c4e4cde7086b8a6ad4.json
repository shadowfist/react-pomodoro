{"ast":null,"code":"var _jsxFileName = \"E:\\\\Humaid's\\\\Work\\\\Projects\\\\20-react-apps\\\\pomodoro\\\\start\\\\src\\\\App.js\";\nimport React, { useState, useRef } from \"react\";\nimport alarmBeep from \"./media/07070161.mp3\";\nimport \"./App.css\";\n\nfunction padTime(time) {\n  return time.toString().padStart(2, \"0\");\n}\n\nexport default function App() {\n  const [title, setTitle] = useState(\"Let's Focus\");\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [isRunning, setIsRunning] = useState(false);\n  const intervalRef = useRef(null);\n  const audioEl = document.getElementById(\"alarmBeep\");\n\n  function startTimer() {\n    if (intervalRef.current !== null) {\n      return;\n    }\n\n    setTitle(\"You're doing great!\");\n    intervalRef.current = setInterval(() => {\n      setTimeLeft(timeLeft => {\n        if (timeLeft > 0) {\n          return timeLeft - 1;\n        }\n\n        audioEl.play();\n        return 0;\n      });\n    }, 1000);\n    setIsRunning(true);\n  }\n\n  function stopTimer() {\n    if (intervalRef.current === null) {\n      return;\n    }\n\n    clearInterval(intervalRef.current);\n    intervalRef.current = null;\n    setTitle(\"Keep going, you're almost there!\");\n    setIsRunning(false);\n  }\n\n  function resetTimer() {\n    setTitle(\"Ready for another round?\");\n    setTimeLeft(25 * 60);\n    clearInterval(intervalRef.current);\n    intervalRef.current = null;\n    setIsRunning(false);\n    const audioEl = document.getElementById(\"alarmBeep\");\n    audioEl.pause();\n  }\n\n  const minutes = padTime(Math.floor(timeLeft / 60));\n  const seconds = padTime(timeLeft - minutes * 60);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, minutes), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, seconds)), /*#__PURE__*/React.createElement(\"audio\", {\n    id: \"alarmBeep\",\n    duration: \"15\",\n    src: alarmBeep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, !isRunning && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 24\n    }\n  }, \"Start\"), isRunning && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: stopTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }\n  }, \"Stop\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Reset\")));\n}","map":{"version":3,"sources":["E:/Humaid's/Work/Projects/20-react-apps/pomodoro/start/src/App.js"],"names":["React","useState","useRef","alarmBeep","padTime","time","toString","padStart","App","title","setTitle","timeLeft","setTimeLeft","isRunning","setIsRunning","intervalRef","audioEl","document","getElementById","startTimer","current","setInterval","play","stopTimer","clearInterval","resetTimer","pause","minutes","Math","floor","seconds"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport alarmBeep from \"./media/07070161.mp3\";\r\nimport \"./App.css\";\r\n\r\nfunction padTime(time) {\r\n  return time.toString().padStart(2, \"0\");\r\n}\r\n\r\nexport default function App() {\r\n  const [title, setTitle] = useState(\"Let's Focus\");\r\n  const [timeLeft, setTimeLeft] = useState(10);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const intervalRef = useRef(null);\r\n  const audioEl = document.getElementById(\"alarmBeep\");\r\n\r\n  function startTimer() {\r\n    if (intervalRef.current !== null) {\r\n      return;\r\n    }\r\n    setTitle(\"You're doing great!\");\r\n    intervalRef.current = setInterval(() => {\r\n      setTimeLeft((timeLeft) => {\r\n        if (timeLeft > 0) {\r\n          return timeLeft - 1;\r\n        }\r\n        audioEl.play();\r\n        return 0;\r\n      });\r\n    }, 1000);\r\n    setIsRunning(true);\r\n  }\r\n\r\n  function stopTimer() {\r\n    if (intervalRef.current === null) {\r\n      return;\r\n    }\r\n    clearInterval(intervalRef.current);\r\n    intervalRef.current = null;\r\n    setTitle(\"Keep going, you're almost there!\");\r\n    setIsRunning(false);\r\n  }\r\n\r\n  function resetTimer() {\r\n    setTitle(\"Ready for another round?\");\r\n    setTimeLeft(25 * 60);\r\n    clearInterval(intervalRef.current);\r\n    intervalRef.current = null;\r\n    setIsRunning(false);\r\n    const audioEl = document.getElementById(\"alarmBeep\");\r\n    audioEl.pause();\r\n  }\r\n\r\n  const minutes = padTime(Math.floor(timeLeft / 60));\r\n  const seconds = padTime(timeLeft - minutes * 60);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"timer\">\r\n        <span>{minutes}</span>\r\n        <span>:</span>\r\n        <span>{seconds}</span>\r\n      </div>\r\n      <audio id=\"alarmBeep\" duration=\"15\" src={alarmBeep}></audio>\r\n      <div className=\"buttons\">\r\n        {!isRunning && <button onClick={startTimer}>Start</button>}\r\n        {isRunning && <button onClick={stopTimer}>Stop</button>}\r\n        <button onClick={resetTimer}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}