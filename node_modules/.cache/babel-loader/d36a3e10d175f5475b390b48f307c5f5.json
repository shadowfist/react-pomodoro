{"ast":null,"code":"var _jsxFileName = \"E:\\\\Humaid's\\\\Work\\\\Projects\\\\20-react-apps\\\\pomodoro\\\\start\\\\src\\\\App.js\";\nimport React, { useState, useRef } from \"react\";\nimport \"./App.css\";\n\nfunction padTime(time) {\n  return time.toString().padStart(2, \"0\");\n}\n\nexport default function App() {\n  const [title, setTitle] = useState(\"Let's Focus\");\n  const [timeLeft, setTimeLeft] = useState(25 * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [enableStop, setEnableStop] = useState(true);\n  const intervalRef = useRef(null);\n\n  function startTimer() {\n    setTitle(\"You're doing great!\");\n    intervalRef.current = setInterval(() => {\n      setTimeLeft(timeLeft => {\n        if (timeLeft > 0) {\n          return timeLeft - 1;\n        }\n\n        return 0;\n      });\n    }, 1000);\n    setEnableStart(true);\n    setEnableStop(false);\n  }\n\n  function stopTimer() {\n    clearInterval(intervalRef.current);\n    intervalRef.current = null;\n    setTitle(\"Keep going, you're almost there!\");\n    setIsRunning(false);\n    setEnableStop(true);\n  }\n\n  function resetTimer() {\n    setTitle(\"Let's Focus!\");\n    setTimeLeft(25 * 60);\n    clearInterval(intervalRef.current);\n    intervalRef.current = null;\n  }\n\n  const minutes = padTime(Math.floor(timeLeft / 60));\n  const seconds = padTime(timeLeft - minutes * 60);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, minutes), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, seconds)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: enableStart,\n    onClick: startTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: enableStop,\n    onClick: stopTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Stop\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Reset\")));\n}","map":{"version":3,"sources":["E:/Humaid's/Work/Projects/20-react-apps/pomodoro/start/src/App.js"],"names":["React","useState","useRef","padTime","time","toString","padStart","App","title","setTitle","timeLeft","setTimeLeft","isRunning","setIsRunning","enableStop","setEnableStop","intervalRef","startTimer","current","setInterval","setEnableStart","stopTimer","clearInterval","resetTimer","minutes","Math","floor","seconds","enableStart"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction padTime(time) {\r\n  return time.toString().padStart(2, \"0\");\r\n}\r\n\r\nexport default function App() {\r\n  const [title, setTitle] = useState(\"Let's Focus\");\r\n  const [timeLeft, setTimeLeft] = useState(25 * 60);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [enableStop, setEnableStop] = useState(true);\r\n  const intervalRef = useRef(null);\r\n\r\n  function startTimer() {\r\n    setTitle(\"You're doing great!\");\r\n    intervalRef.current = setInterval(() => {\r\n      setTimeLeft((timeLeft) => {\r\n        if (timeLeft > 0) {\r\n          return timeLeft - 1;\r\n        }\r\n        return 0;\r\n      });\r\n    }, 1000);\r\n    setEnableStart(true);\r\n    setEnableStop(false);\r\n  }\r\n\r\n  function stopTimer() {\r\n    clearInterval(intervalRef.current);\r\n    intervalRef.current = null;\r\n    setTitle(\"Keep going, you're almost there!\");\r\n    setIsRunning(false);\r\n    setEnableStop(true);\r\n  }\r\n\r\n  function resetTimer() {\r\n    setTitle(\"Let's Focus!\");\r\n    setTimeLeft(25 * 60);\r\n    clearInterval(intervalRef.current);\r\n    intervalRef.current = null;\r\n  }\r\n\r\n  const minutes = padTime(Math.floor(timeLeft / 60));\r\n  const seconds = padTime(timeLeft - minutes * 60);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"timer\">\r\n        <span>{minutes}</span>\r\n        <span>:</span>\r\n        <span>{seconds}</span>\r\n      </div>\r\n\r\n      <div className=\"buttons\">\r\n        <button disabled={enableStart} onClick={startTimer}>\r\n          Start\r\n        </button>\r\n        <button disabled={enableStop} onClick={stopTimer}>\r\n          Stop\r\n        </button>\r\n        <button onClick={resetTimer}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}